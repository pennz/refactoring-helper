层次型的结构，直接套用双链表不太好，可以兄弟孩子结构来表示树。

而孩子节点那，可以采用双链表---- 不太对，直接链也就可以吧，
一条链为a点为头，然后后面的都是孩子节点，还有一条链为头节点为a的附节点，其他点均为a节点的兄弟节点。这样主要是存个冗余信息，可以方便地找上一层。
--上面说的还是简化了，是个图，不是树，因为一个节点会有多个父节点。
所以还是一个孩子链表，一个兄弟链表，一个父链表，后期数据统计比较方便。

但是如何设置接口，方便后面扩展？
可以设置接口，在（有向图）中每个点，的3个方向（上，同层，下）进行统计，即在这3个位置都设定钩子，在grader内写上统计函数，以挂到挂钩上。
统计信息也就挂在树的节点上，也按照链表存，取数据的时候就找名字匹配的。

但是冗余信息，底层处理的时候，需要把所有的信息都处理干净，数据保持一致性。
对于树的基本操作：
1. 生成树：在已有基础上生成，快些。（动态过程是怎么形成的？）
2. 裁剪树：某个节点，兄弟表给删掉即可。
